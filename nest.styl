body {
  margin: 0;
  font: 100%/1.5 "Helvetica Neue";
  height: 100%;
  // position: absolute;
  // overflow: hidden;
}

h1
h2
h3
h4
h5
h6
  line-height 1
  font-weight 200

dev       = true
dev_color = teal

// Vertical Spacing

*
  box-sizing border-box !important
  margin-bottom 0
  &:first-child:not(.staff_member)
    margin-top 0 !important
  &:after,
  &:after
    box-sizing border-box

// Nest Generator

nest(ratio, shift = 0, steps = 6, bg)
  class_name = "nest"
  class_list = '.' + class_name + ' '
  for step in (1...steps + 1)
    rank = steps - (step - shift)
    size = (ratio**rank)rem
    unless step is 1
      {class_list += '.' + class_name + ' '}
    {class_list}, .nest-{step}
      padding size
      if dev
        background-color rgba(bg, 0.2)
        transition all 0.25s ease-in-out
        outline 1px solid rgba(bg, 0.75)

      // Adjust spacing size for children
      rank = steps - ((step + 1) - shift)
      size = (ratio**rank)rem
      
      *
        margin-top size
        &.sub-offset-top
          margin-top -(size) !important

      .grid-wrapper
        margin-right -(size)
        margin-left  -(size)
        &.sub-inline
          margin-top      size*0.5
          margin-right  -(size*0.5)
          margin-bottom -(size*0.5)
          margin-left   -(size*0.5)
          &:first-child
            margin-top  -(size*0.5) !important
          > .grid
            display block
            width auto
            font-size 0
            > *
              font-size 1rem
              display inline-block
              margin 0
              padding size*0.5
              width 25%

      .grid
        border-spacing size 0
        &.sub-hv
          border-spacing size

// `.nest`
// Purpose: Visually represents Nest Heirarchy via padding and top margin
// Requirements: Must be present in actual markup/templates

nest(1.6, -3, 6, dev_color)

// NEST

.nest
  display block // Ensures default block-level display.

  // SUBCLASSES
  // These provide addition control while maintaining dynamic spacing.
  // The use of `!important` is necessary due to the high level of specificity
  // associated with dynamic nesting (e.g. '.nest .nest .nest' always trumps '.nest.sub-x').

  &.sub-null       // negate padding
    padding        0 !important
  &.sub-v          // only padding top and bottom
    padding-left   0 !important
    padding-right  0 !important
  &.sub-h          // only padding right and left
    padding-top    0 !important
    padding-bottom 0 !important
  &.sub-top        // only padding top
    padding-right  0 !important
    padding-bottom 0 !important
    padding-left   0 !important
  &.sub-no-top     // no padding top
    padding-top    0 !important
  &.sub-right      // only padding right
    padding-top    0 !important
    padding-bottom 0 !important
    padding-left   0 !important
  &.sub-no-right   // no padding right
    padding-right  0 !important
  &.sub-bottom     // only padding bottom
    padding-top    0 !important
    padding-right  0 !important
    padding-left   0 !important
  &.sub-no-bottom  // no padding bottom
    padding-bottom 0 !important
  &.sub-left       // only padding left
    padding-top    0 !important
    padding-right  0 !important
    padding-bottom 0 !important
  &.sub-no-left    // no padding left
    padding-left   0 !important
  &.sub-collapse-v // removes top margin from children
    > *
      margin-top   0

// `.grid-wrapper`
// Purpose: Offsets border-spacing
// Requirements: Must wrap `.grid` to ensure consistent spacing

.grid-wrapper
  vertical-align top
  &.sub-offset-none
    margin-right 0 !important
    margin-left  0 !important
  &.sub-collapse
    margin-right 0 !important
    margin-left  0 !important
    > .grid
      border-spacing 0 !important
  // &.sub-inline
  //   display inline-block

// GRID - creates horizontal layout

.grid
  display table
  table-layout fixed
  vertical-align top
  width 100%

  > *
    display table-cell
    vertical-align inherit

  &.sub-auto
    table-layout auto

  &.sub-wrap
    display block
    > * 
      display inline-block

  &.sub-align-middle
    vertical-align middle

  &.sub-collapse
    width auto

  &.sub-full_height
    height 100%

  &.sub-break_small
    > .grid-row
      > *
        @media (max-width: 640px)
          display block
          width 100%


// GRID ROW - because table rows create dynamic vertical grids

.grid-rows
  display table-row-group

.grid-row
  display table-row
  width 100%

  &.sub-collapse
    height 1px

  &.sub-full_height
    height 100%

  > *
    display table-cell
    vertical-align inherit

.grid-row-scroll
  position relative
  width 100%
  height 100%
@-moz-document url-prefix()
  .grid-row-scroll
    display block // explicitly set in case parent is row (for firefox)

.grid-row-scroll-region
  overflow auto
  -webkit-overflow-scrolling touch
  position absolute
  top 0
  right 0
  bottom 0
  left 0

// GRID COLUMN

.grid-column
  &.sub-fill
    width 100%
  &.sub-collapse
    width 1px
  &.sub-full_height
    height 100%

// Global Subclasses

.sub-expand-wh
  width 100%
  height 100%
.sub-collapse-wh
  width 1px
  height 1px
.sub-collapse-v
  > *
    margin-top 0 !important
    > .grid-row
      > *
        @media (max-width: 640px)
          display block
          width 100%


// GRID ROW - because table rows create dynamic vertical grids

.grid-rows
  display table-row-group

.grid-row
  display table-row
  width 100%

  &.sub-collapse
    height 1px

  &.sub-full_height
    height 100%

  > *
    display table-cell
    vertical-align inherit

.grid-row-scroll
  position relative
  width 100%
  height 100%
@-moz-document url-prefix()
  .grid-row-scroll
    display block // explicitly set in case parent is row (for firefox)

.grid-row-scroll-region
  overflow auto
  -webkit-overflow-scrolling touch
  position absolute
  top 0
  right 0
  bottom 0
  left 0

// GRID COLUMN

.grid-column
  &.sub-fill
    width 100%
  &.sub-collapse
    width 1px
  &.sub-full_height
    height 100%

// Global Subclasses

.sub-expand-wh
  width 100%
  height 100%
.sub-collapse-wh
  width 1px
  height 1px
.sub-collapse-v
  > *
    margin-top 0 !important

.module
  overflow hidden
  border-radius 0.3em
  border 1px solid rgba(dev_color, 0.75)
  > *:first-child
    border-top 0 !important
  > *
    border-width 1px 0 0 !important